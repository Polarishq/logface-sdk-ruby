=begin
#FireFawkes Developer API

#External Facing Developer API 

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

# Common files
require 'logface_client/api_client'
require 'logface_client/api_error'
require 'logface_client/version'
require 'logface_client/configuration'

# Models
require 'logface_client/models/account_response'
require 'logface_client/models/api_key'
require 'logface_client/models/api_key_response'
require 'logface_client/models/api_keys_response'
require 'logface_client/models/application'
require 'logface_client/models/application_request'
require 'logface_client/models/applications_response'
require 'logface_client/models/body'
require 'logface_client/models/body_1'
require 'logface_client/models/body_2'
require 'logface_client/models/body_3'
require 'logface_client/models/body_4'
require 'logface_client/models/body_5'
require 'logface_client/models/body_6'
require 'logface_client/models/error'
require 'logface_client/models/event'
require 'logface_client/models/events'
require 'logface_client/models/events_return'
require 'logface_client/models/filter_kv'
require 'logface_client/models/list_meta_data'
require 'logface_client/models/query_info'
require 'logface_client/models/query_logic_info_meta_data'
require 'logface_client/models/query_response'
require 'logface_client/models/search_context'
require 'logface_client/models/simple_filter'
require 'logface_client/models/social_provider'
require 'logface_client/models/tenant'
require 'logface_client/models/time_range'
require 'logface_client/models/token'

# APIs
require 'logface_client/api/applications_api'
require 'logface_client/api/context_api'
require 'logface_client/api/events_api'
require 'logface_client/api/identity_api'
require 'logface_client/api/login_api'
require 'logface_client/api/search_api'

module LogfaceClient
  class << self
    # Customize default settings for the SDK using block.
    #   LogfaceClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
