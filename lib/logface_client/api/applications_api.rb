=begin
#FireFawkes Developer API

#External Facing Developer API 

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require "uri"

module LogfaceClient
  class ApplicationsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Find applications
    # Find many applications
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :index Index of the first event in the set of returned results.  Negative index will count from the end of the results. (default to 0)
    # @option opts [Integer] :count Number of events desired.  Will return fewer if there are fewer to return. (default to 10)
    # @return [Array<ApplicationsResponse>]
    def application_get(opts = {})
      data, _status_code, _headers = application_get_with_http_info(opts)
      return data
    end

    # Find applications
    # Find many applications
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :index Index of the first event in the set of returned results.  Negative index will count from the end of the results.
    # @option opts [Integer] :count Number of events desired.  Will return fewer if there are fewer to return.
    # @return [Array<(Array<ApplicationsResponse>, Fixnum, Hash)>] Array<ApplicationsResponse> data, response status code and response headers
    def application_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ApplicationsApi.application_get ..."
      end
      # resource path
      local_var_path = "/application"

      # query parameters
      query_params = {}
      query_params[:'index'] = opts[:'index'] if !opts[:'index'].nil?
      query_params[:'count'] = opts[:'count'] if !opts[:'count'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<ApplicationsResponse>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ApplicationsApi#application_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Find an application
    # Find an existing application
    # @param id id of the of the application
    # @param [Hash] opts the optional parameters
    # @return [Application]
    def application_id_get(id, opts = {})
      data, _status_code, _headers = application_id_get_with_http_info(id, opts)
      return data
    end

    # Find an application
    # Find an existing application
    # @param id id of the of the application
    # @param [Hash] opts the optional parameters
    # @return [Array<(Application, Fixnum, Hash)>] Application data, response status code and response headers
    def application_id_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ApplicationsApi.application_id_get ..."
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling ApplicationsApi.application_id_get"
      end
      # resource path
      local_var_path = "/application/{id}".sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Application')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ApplicationsApi#application_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
